singularity{
  enabled                         = true	
  runOptions                      = "--bind /fs1/ --bind /local/ --bind /fs2/ --bind /mnt/beegfs/"
}

env{
  SENTIEON_LICENSE                = "10.139.0.101:8990"
  bwt_max_mem                     = "50G"
}

trace {
  enabled = true
  overwrite = true
}

report {
  enabled = true
  overwrite = true
}

timeline {
  enabled = true
  overwrite = true
}

params {

  //----------------------------------------------------------------------------------//
  // DEFAULT PARAMS //
  //----------------------------------------------------------------------------------//
  // cluster params //
  cpu_all                         = 50
  cpu_many                        = 16
  cpu_some                        = 8

  queue                           = "high"
  git                             = "$baseDir/git.hash"
  container_dir                   = "/fs1/resources/containers/"
  container                       = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif" // For Sentieon and others
  baseDir                         = "$baseDir"

  // results dir //
  dev                             = false
  dev_suffix                      = params.dev ? "_dev" : ""
  resultsdir                      = "/fs1/ram/Pipelines/DSL2/Testing"
  // resultsdir                      = "/data/bnf/dev/ram/projects/PGx/Orebro/results_test"
  outdir                          = "${params.resultsdir}${params.dev_suffix}"
  crondir                         = "${params.outdir}/cron/"
  subdir                          = "pharmacogenomics"
  crondir                         = "${params.outdir}/cron/"
  reports_path                    = "${params.outdir}/${params.subdir}/reports"
  workflow_image                  = "$baseDir/resources/workflow_images/PGx.png"

  // Input CSV file //
  csv                             = "/fs1/ram/Pipelines/Testing/PGxModule/tests/fastq_input.csv"

  // DEFAULT PIPELINE PARAMS //
  assay                           = "pharmcogenomics"
  fastqc                          = true
  umi                             = false
  haplotype_caller                = "sentieon" // gatk or sentieon
  ontarget                        = false
  pharmcat                        = true
  coyote_group                    = "PGx"
  cdm                             = "PGx"
  padding                         = 100
  read_ratio                      = 0.2
  read_depth                      = 100
  minDP                           = 10
  noupload                        = false
  sample                          = false
  sample_val                      = null
  trim                            = false
  trim_length                     = 151
  cyp2d6                          = null
  aligner                         = "sentieon"

  // Variant calling / Haplotype calling //
  sentieon_haplotyper             = true
  gatk_haplotyper                 = false
  vardict                         = false
  freebayes                       = false
  samtools                        = false

  // SV calling //
  manta                           = false

  // reference genome //
  refpath                         = "/fs1/resources/ref/hg38/"
  genome_file                     = "${params.refpath}/fasta/masked/GCA_000001405.15_GRCh38_no_alt_analysis_set_nochr_masked.fna"
  genome_dict                     = "${params.refpath}/fasta/masked/GCA_000001405.15_GRCh38_no_alt_analysis_set_nochr_masked.dict"
  gene_regions                    = "${params.refpath}/gtf/gencode.v33.exons.sort.merge.bed"
  regions_bed                     = "${params.refpath}/bed/pharmacogenomics/orebro/pgx_panelv2_TE-97619858_hg38_grch38_refseq_mane_whole_genes_and_snps_PAD50_VARIANT_CALLING_240412.bed"
  picard_interval_list            = "${params.refpath}/bed/pharmacogenomics/orebro/pgx_panelv2_TE-97619858_hg38_grch38_refseq_mane_whole_genes_and_snps_PAD50_VARIANT_CALLING_240412.baits.interval_list"
  interval_list                   = "${params.refpath}/bed/pharmacogenomics/orebro/pgx_panelv2_TE-97619858_hg38_grch38_refseq_mane_whole_genes_and_snps_PAD50_VARIANT_CALLING_240412.genome.interval_list"
  regions_bed_qc                  = params.regions_bed
  interval_list_qc                = params.interval_list
  target_regions                  = params.regions_bed
  padded_target_regions           = params.regions_bed
  padded_target_intervals         = params.interval_list
  addchr                          = "False"
  dbSNP                           = "${params.refpath}/annotation_dbs/dbSNP_151_PGx_padded_2000bp.vcf.gz"
  dbSNP_version                   = "151"
  ref_version                     = "GCA_000001405.15_GRCh38_masked"

  // databases and resources
  pgx_resources                   = "$baseDir/resources/"
  clinical_guidelines             = "${params.pgx_resources}/guidelines/clinical_guidelines.csv"
  haplotype_activity              = "${params.pgx_resources}/guidelines/haplotype_activity_score.csv"
  interaction_guidelines          = "${params.pgx_resources}/guidelines/interaction_guidelines.csv"
  haplotype_definitions           = "${params.pgx_resources}/haplotypes/haplotype_definitions.csv"
  hidden_haplotypes               = "${params.pgx_resources}/haplotypes/hidden_haplotpyes.csv"
  report_template                 = "${params.pgx_resources}/templates/report.html"
  target_rsid                     = "${params.pgx_resources}/HG38/genomic_regions/target_rsid_hg38.bed"
  target_rsid_intervals           = "${params.pgx_resources}/HG38/genomic_regions/target_rsid_hg38.interval_list"

  // multiqc params //
  multiqc_config                  = "$baseDir/configs/multiqc_config.yml"
  multiqc_css                     = "$baseDir/configs/multiqc_custom.css"
  multiqc_extra_config            = null
  multiqc_logo                    = "${params.pgx_resources}/templates/rs_logo_rgb.png"
  multiqc_methods_desc            = null

}

process {
  executor                        = "slurm"
  queue                           = params.queue
  time                            = 48.h
  container                       = params.container
}

executor {
    name                          = 'slurm'
    queueSize                     = 10
    pollInterval                  = '5 sec'
}


manifest {
    name                          = "PGxPipeline"
    author                        = "CMD Lund"
    homePage                      = "https://github.com/ramsainanduri/PGxModule"
    description                   = "Genotyping for Pharmacogenes and annotate them with relevant guidelines and clinical significance from WGS/WES of cancer patients"
    mainScript                    = "main.nf"
    nextflowVersion               = "!>=23.04.0"
    version                       = "3.0.0_dev"
}

profiles {

  // whole genome specific filters
  wgs {
    params.read_depth             = 30
  }
  
  myeloid {
    params.outdir                 = "${params.resultsdir}${params.dev_suffix}"
    params.subdir                 = "myeloid38/pgx"
    params.crondir                = "${params.outdir}/cron/"
    params.assay                  = "myeloid"
  }

  solid {
    params.outdir                 = "${params.resultsdir}${params.dev_suffix}"
    params.subdir                 = "solid_hg38/pgx"
    params.crondir                = "${params.outdir}/cron/"
    params.assay                  = "solid"
  }

  pgx_small {
    params.panel                    = "PGx"
    params.regions_bed              = "${params.pgx_resources}/HG38/genomic_regions/exons_variants_pharmacogenomics_18_06_2019_ex_cyp2d6_hg38.bed"
    params.interval_list            = "${params.pgx_resources}/HG38/genomic_regions/exons_variants_pharmacogenomics_18_06_2019_ex_cyp2d6_hg38_100bp_padded.interval_list"
    params.target_regions           = "${params.regions_bed}"
    params.padded_target_intervals  = "${params.interval_list}"
    params.regions_bed_qc           = params.regions_bed
    params.interval_list_qc         = params.interval_list
    params.umi                      = false
    params.fastqc                   = false
    params.haplotype_caller         = "sentieon" // GATK or SENTIEON
    params.pharmcat                 = true
    params.ontarget                 = true
  }


  // Params for the small Panel Run via bam input, requeired to select panel profile too 
  pgx {
    params.panel                    = "PGx"
    params.umi                      = false
    params.fastqc                   = false
    params.haplotype_caller         = "sentieon" // GATK or SENTIEON
    params.pharmcat                 = true
    params.ontarget                 = true

    // NEW PANEL PARAMS
    params.trim                     = true
    params.trim_length              = 151
    params.aligner                  = "sentieon"

    // Haplotype bed
    params.haplotype_bed            = "${params.refpath}/bed/pharmacogenomics/orebro/pgx_panelv2_TE-97619858_hg38_grch38_refseq_mane_whole_genes_and_snps_PAD50_VARIANT_CALLING_240412.bed"

    // Variant calling / Haplotype calling //
    params.sentieon_haplotyper      = true
    params.gatk_haplotyper          = true
    params.vardict                  = false
    params.freebayes                = true
    params.bcftools                 = true
    params.minVCs                   = 2

    // SV calling
    params.sv_calls                 = false
    params.manta                    = false

    // coverage parameters
    params.coverage_label           = "pgx_240425"
    params.coverage_bed             = "${params.refpath}/bed/pharmacogenomics/orebro/pgx_panelv2_TE-97619858_hg38_annot_PAD50_COVERAGE_240425.bed"
    params.coverage_threshold       = 20
    params.minDP                    = 10  
    params.SNP_bed                  = "${params.refpath}/bed/pharmacogenomics/orebro/pgx_panelv2_rs_sites_only_sorted.bed"
    params.pharmcat_bed             = "${params.pgx_resources}/pharmcat/pharmcat_positions_2.15.5.txt"
    params.pharmcat_positions_bed   = "${params.pgx_resources}/pharmcat/pharmcat_positions_2.15.5.bed"
    params.coverage_overlap_bed     = "${params.refpath}/bed/pharmacogenomics/orebro/pgx_panelv2_TE-97619858_hg38_annot_PAD50_COV_merged_G4AGH_Mandelker_240425.bed"

    // cnv parameters
    params.cnv_label                = "pgx_cnv_240425"
    params.cnv_bed                  =	"${params.refpath}/bed/pharmacogenomics/orebro/pgx_panelv2_TE-97619858_hg38_annot_PAD50_CNV_240425.bed"
    params.cnv_overlap_bed          = "${params.refpath}/bed/pharmacogenomics/orebro/pgx_panelv2_TE-97619858_hg38_annot_PAD50_CNV_merged_G4AGH_Mandelker_240425.bed"
    params.cnv_zThreshold           = 1.75
    params.cnv_cnThreshold          = 0.5
    params.cnv_propThreshold        = 0.5
    params.cnv_pon_folder           = "/mnt/seqdata/Target_sekvensering/Farmakogenetik/pipeline/miseq_cnv_pon"

    // pharmcat parameters
    // params.pharmcat_repo            = "/opt/lab/pharmcat-2.8.2"
    // params.pharmcat_ref_genome      = "/mnt/staphula/Public_data/HUMAN/HG38_p13_pharmcat/reference.fna.bgz"
    // params.cpic_diplo_to_pheno      = "/mnt/seqdata/Target_sekvensering/Farmakogenetik/pipeline/CPIC_CYP2D6_Diplotype_Phenotype_Table_240423.txt"

    // Pharmcat research calls
    params.cyp2d6                   = true

  }

}

// Include the base config //
includeConfig "configs/modules/base.config"

// Include the module specific configs //
includeConfig "configs/modules/create_meta.config"
includeConfig "configs/modules/preprocess_fastq.config"
includeConfig "configs/modules/alignment.config"
includeConfig "configs/modules/variant_calling.config"
includeConfig "configs/modules/variant_filtration.config"
includeConfig "configs/modules/pharmcat.config"
includeConfig "configs/modules/coverage.config"
includeConfig "configs/modules/qc.config"
includeConfig "configs/modules/multiqc.config"
includeConfig "configs/modules/software_versions.config"



// includeConfig "configs/modules/seqtk.config"
// includeConfig "configs/modules/create_meta.config"
// includeConfig "configs/modules/align_sentieon.config"
// includeConfig "configs/modules/qc.config"
// includeConfig "configs/modules/haplotyping.config"
// includeConfig "configs/modules/pharmcat.config"
// includeConfig "configs/modules/ontarget.config"
// includeConfig "configs/modules/annotations.config"
// includeConfig "configs/modules/coverage.config"
// // includeConfig "configs/modules/pgx_small.config"
// // includeConfig "configs/modules/pgx_full.config"
// includeConfig "configs/modules/software_versions.config"
// includeConfig "configs/modules/multiqc.config"