/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.args4           = fourth set of arguments appended to command in module (multi-tool modules).
        ext.args5           = fifth set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
        ext.suffix          = File name suffix for output files.
        ext.suffix2         = File name suffix for output2 files.
        ext.when            = Conditional clause
----------------------------------------------------------------------------------------
*/

process {

    withName: '.*PGX_SMALL:.*' {
        container = "${params.container_dir}/sentieon_202112.sif"
    }

    withName: '.*PGX_SMALL:.*:GATK_HAPLOTYPING' {
        container = "${params.container_dir}/gatk4.simg"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/vcf/gatk",
            mode: 'copy',
            overwrite: true,
            pattern: "*.GATK.haplotypes.vcf.gz*"
        ]

        ext.args    = { "-R ${params.genome_file} " }
        ext.prefix  = { "${meta.group}.GATK" }
        ext.when    = { params.haplotype_caller == 'GATK' }
    }

    withName: '.*PGX_SMALL:.*:SENTIEON_HAPLOTYPING' {
        container = "${params.container_dir}/sentieon_202308.01.sif"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/vcf/sentieon",
            mode: 'copy',
            overwrite: true,
            pattern: "*.sentieon.haplotypes.vcf.gz*"
        ]

        ext.args = { "-r ${params.genome_file} " }
        ext.args2 = { "--emit_mode confident" }
        ext.prefix  = { "${meta.group}.sentieon" }
        ext.when    = { params.haplotype_caller == 'SENTIEON' }
    }

    withName: '.*PGX_SMALL:.*:VARIANT_FILTRATION' {
        container = "${params.container_dir}/target_variants_python.sif"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/vcf/",
            mode: 'copy',
            overwrite: true,
            pattern: "*.filtered.haplotypes.vcf.gz*"
        ]

        ext.args    = { " --read_ratio=${params.read_ratio} --depth=${params.read_depth} "}
        ext.prefix  = { "${meta.group}" }
    }

    withName: '.*PGX_SMALL:.*:PHARMCAT:PHARMCAT_PREPROCESSING' {
        container           = "${params.container_dir}/pharmcat_2.12.0.sif"
        containerOptions    = ' --contain '

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/pharmcat/",
            mode: 'copy',
            overwrite: true,
            pattern: "*.pharmcat.preprocessed.vcf"
        ]

        ext.prefix  = { "${meta.group}" }
        ext.when    = params.pharmcat
    }

    withName: '.*PGX_SMALL:.*:PHARMCAT:PHARMCAT_RUN' {
        container           = "${params.container_dir}/pharmcat_2.12.0.sif"
        containerOptions    = ' --contain '

        publishDir = [
            [ 
                path: "${params.outdir}/${params.subdir}/pharmcat/",
                mode: 'copy',
                overwrite: true,
                pattern: "*.html"
            ],
            [ 
                path: "${params.outdir}/${params.subdir}/pharmcat/",
                mode: 'copy',
                overwrite: true,
                pattern: "*.json"
            ],
        ]

        ext.prefix  = { "${meta.group}" }
        ext.when    = params.pharmcat
        ext.args    = {" --reporter-sources CPIC --matcher-save-html --reporter-save-json -ma -re --reporter-title ${meta.group} "}
    }

    withName: '.*PGX_SMALL:.*:ONTARGET_BAM' {
        container = "${params.container_dir}/samtools.simg"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/bam/",
            mode: 'copy',
            overwrite: true,
            pattern: "*ontarget*.bam*"
        ]

        ext.when    = { params.ontarget }
        ext.args    = { " -h -M -L ${params.padded_target_regions}" }
        ext.prefix  = { "${meta.group}" }
    }

    withName: '.*PGX_SMALL:.*:ONTARGET_VCF' {
        container = "${params.container_dir}/bcftools_1.20.sif"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/vcf/",
            mode: 'copy',
            overwrite: true,
            pattern: "*.ontarget.*.vcf.gz*"
        ]

        ext.when    = { params.ontarget }
        ext.prefix  = { "${meta.group}" }
        ext.args    = { " -R ${params.padded_target_regions} "}
    }

    withName: '.*PGX_SMALL:.*:BCFTOOLS_ANNOTATION' {
        container = "${params.container_dir}/bcftools_1.20.sif"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/vcf/",
            mode: 'copy',
            overwrite: true,
            pattern: "*.anno.vcf"
        ]

        ext.args    = { "-a ${params.dbSNP} -c ID" }
        ext.prefix  = { "${meta.group}" }
        ext.suffix  = { "filtered.ontarget.haplotypes" }
    }


    withName: '.*PGX_SMALL:.*:DETECTED_VARIANTS' {
        container = "${params.container_dir}/target_variants_python.simg"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/report/detected_variants",
            mode: 'copy',
            overwrite: true,
            pattern: "*.tsv"
        ]

        ext.args    = { " --target_bed=${params.pgx_target_rsid} --addchr ${params.addchr} "}
        ext.prefix  = { "${meta.group}" }
    }

    withName: '.*PGX_SMALL:.*:DEPTH_OF_TARGETS' {
        container = "${params.container_dir}/gatk3.simg"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/report/coverage/",
            mode: 'copy',
            overwrite: true,
            pattern: "*.gdf"
        ]

        ext.args    = { " -allowPotentiallyMisencodedQuals -R ${params.genome_file} -L ${params.pgx_target_rsid_intervals} "}
        ext.prefix  = { "${meta.group}" }
    }

    withName: '.*PGX_SMALL:.*:DEPTH_OF_BAITS' {
        container = "${params.container_dir}/gatk3.simg"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/gdf/",
            mode: 'copy',
            overwrite: true,
            pattern: "*.gdf"
        ]

        ext.args    = { " -allowPotentiallyMisencodedQuals -R ${params.genome_file} -L ${ params.padded_target_intervals }"}
        ext.prefix  = { "${meta.group}" }
    }

    withName: '.*PGX_SMALL:.*:APPEND_ID_TO_GDF' {
        container = "${params.container_dir}/target_variants_python.simg"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/report/coverage/",
            mode: 'copy',
            overwrite: true,
            pattern: "*.gdf"
        ]

        ext.args    = { " --target_bed=${params.pgx_target_rsid} --addchr ${params.addchr} "}
        ext.prefix  = { "${meta.group}" }
    }

    withName: '.*PGX_SMALL:.*:GET_CLIINICAL_GUIDELINES' {
        container = "${params.container_dir}/target_variants_python.simg"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/report/possible_diploids/",
            mode: 'copy',
            overwrite: true,
            pattern: "*.tsv"
        ]

        ext.args   = { " --haplotype_definitions ${params.haplotype_definitions} --clinical_guidelines ${params.clinical_guidelines} --haplotype_activity ${params.haplotype_activity} --hidden_haplotypes ${params.hidden_haplotypes} "}
        ext.prefix = { "${meta.group}" }
    }

    withName: '.*PGX_SMALL:.*:GET_INTERACTION_GUIDELINES' {
        container = "${params.container_dir}/target_variants_python.simg"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/report/possible_interactions/",
            mode: 'copy',
            overwrite: true,
            pattern: "*.tsv"
        ]

        ext.args   = { " --interaction_guidelines ${params.interaction_guidelines} "}
        ext.prefix = { "${meta.group}" }
    }

    withName: '.*PGX_SMALL:.*:GET_PGX_REPORT' {
        container = "${params.container_dir}/jinja_report.sif"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/report",
            mode: 'copy',
            overwrite: true,
            pattern: "*.html"
        ]

        ext.args   = { [
            "--read_depth ${params.read_depth}",
            "--haplotype_definitions ${params.haplotype_definitions}",
            "--target_bed ${params.pgx_target_regions}",
            "--target_rsids ${params.pgx_target_rsid}",
            "--dbSNP_version ${params.dbSNP_version}",
            "--genome_version ${params.ref_version}"
            ].join(' ').trim() }
        ext.prefix = { "${meta.group}" }
    }

}