/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.args4           = fourth set of arguments appended to command in module (multi-tool modules).
        ext.args5           = fifth set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
        ext.suffix          = File name suffix for output files.
        ext.suffix2         = File name suffix for output2 files.
        ext.when            = Conditional clause
----------------------------------------------------------------------------------------
*/

process {

    withName: '.*:VARIANT_CALLING:GATK_HAPLOTYPING' {
        container = "${params.container_dir}/gatk4.simg"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/vcf/gatk",
            mode: 'copy',
            overwrite: true,
            pattern: "*.GATK.haplotypes.vcf.gz*"
        ]

        ext.args    = { "-R ${params.genome_file} " }
        ext.prefix  = { "${meta.group}.GATK" }
        ext.when    = { params.gatk_haplotyper }
    }

    withName: '.*:VARIANT_CALLING:SENTIEON_HAPLOTYPING' {
        container = "${params.container_dir}/sentieon_202308.01.sif"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/vcf/sentieon",
            mode: 'copy',
            overwrite: true,
            pattern: "*.sentieon.haplotypes.vcf.gz*"
        ]

        ext.args = { "-r ${params.genome_file} " }
        ext.args2 = { "--emit_mode confident" }
        ext.prefix  = { "${meta.group}.sentieon" }
        ext.when    = { params.sentieon_haplotyper }
    }

    withName: '.*VARIANT_CALLING:FREEBAYES' {
        container = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/vcf/freebayes",
            mode: 'copy',
            overwrite: true,
            pattern: "*.freebayes.raw.vcf.gz*"
        ]

        ext.when    = params.freebayes
        ext.args    = { "-f ${params.genome_file} --targets ${params.haplotype_bed} --pooled-continuous --pooled-discrete --min-repeat-entropy 1" }
        ext.prefix  = { "${meta.group}.freebayes.raw" }
    }

    withName: '.*VARIANT_CALLING:BCFTOOLS_CALL' {
        container = "${params.container_dir}/bcftools_1.21.sif"
        containerOptions = " --contain "

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/vcf/bcftools",
            mode: 'copy',
            overwrite: true,
            pattern: "*.bcftools.raw.vcf.gz*"
        ]

        ext.when    = params.bcftools
        ext.args    = { " -d 1000 -L 1000 -Ov -f ${params.genome_file} -a FORMAT/DP -a FORMAT/AD -a FORMAT/ADF -a FORMAT/ADR" }
        ext.args2   = { " -vm -Ov -a GQ,GP " }
        ext.args3   = { " --targets-file ${params.haplotype_bed} -m+x -sLowCov -e'INFO/DP < ${params.minDP}' -Ov " }
        ext.args4   = { " -- -d -t INFO/AF,FORMAT/VAF,INFO/MAF " }
        ext.prefix  = { "${meta.group}.bcftools.raw" }
    }

    withName: '.*VARIANT_CALLING:NORM_SENTIEON' {
        container = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/vcf/sentieon",
            mode: 'copy',
            overwrite: true,
            pattern: "*.sentieon.vcf.gz*"
        ]

        ext.when    = params.sentieon_haplotyper
        ext.args = { "-r ${params.genome_file}" }
    }

    withName: '.*VARIANT_CALLING:NORM_GATK' {
        container = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/vcf/gatk",
            mode: 'copy',
            overwrite: true,
            pattern: "*.gatk.vcf.gz*"
        ]

        ext.when    = params.gatk_haplotyper
        ext.args = { "-r ${params.genome_file}" }
    }

    withName: '.*VARIANT_CALLING:NORM_FREEBAYES' {
        container = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/vcf/freebayes",
            mode: 'copy',
            overwrite: true,
            pattern: "*.freebayes.vcf.gz*"
        ]

        ext.when    = params.freebayes
        ext.args = { "-r ${params.genome_file}" }
    }

    withName: '.*VARIANT_CALLING:NORM_BCFTOOLS' {
        container = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/vcf/bcftools",
            mode: 'copy',
            overwrite: true,
            pattern: "*.bcftools.vcf.gz*"
        ]

        ext.when    = params.freebayes
        ext.args = { "-r ${params.genome_file}" }
    }

    withName: '.*VARIANT_CALLING:AGGREGATE_VCFS' {
        container = "${params.container_dir}/python-utils.3.13.2.sif"
        publishDir = [
            path: "${params.outdir}/${params.subdir}/vcf/aggregate", 
            mode: 'copy', 
            overwrite: true,
            pattern: "*.agg.vcf.gz*"
        ]
    }
}