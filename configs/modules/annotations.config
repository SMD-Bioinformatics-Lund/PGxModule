/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.args4           = fourth set of arguments appended to command in module (multi-tool modules).
        ext.args5           = fifth set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
        ext.suffix          = File name suffix for output files.
        ext.suffix2         = File name suffix for output2 files.
        ext.when            = Conditional clause
----------------------------------------------------------------------------------------
*/

process {

    withName: '.*:ANNOTATION:BCFTOOLS_ANNOTATION' {
        container = "${params.container_dir}/bcftools_1.20.sif"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/vcf/",
            mode: 'copy',
            overwrite: true,
            pattern: "*.anno.vcf"
        ]

        ext.args    = { "-a ${params.dbSNP} -c ID" }
        ext.prefix  = { "${meta.group}" }
        ext.suffix  = { "filtered.ontarget.haplotypes" }
    }


    withName: '.*:ANNOTATION:DETECTED_VARIANTS' {
        container = "${params.container_dir}/target_variants_python.simg"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/report/detected_variants",
            mode: 'copy',
            overwrite: true,
            pattern: "*.tsv"
        ]

        ext.args    = { " --target_bed=${params.target_rsid} --addchr ${params.addchr} "}
        ext.prefix  = { "${meta.group}" }
    }

}
