/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.args4           = fourth set of arguments appended to command in module (multi-tool modules).
        ext.args5           = fifth set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
        ext.suffix          = File name suffix for output files.
        ext.suffix2         = File name suffix for output2 files.
        ext.when            = Conditional clause
----------------------------------------------------------------------------------------
*/

process {

    withName: '.*:HAPLOTYPING:GATK_HAPLOTYPING' {
        container = "${params.container_dir}/gatk4.simg"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/vcf/gatk",
            mode: 'copy',
            overwrite: true,
            pattern: "*.GATK.haplotypes.vcf.gz*"
        ]

        ext.args    = { "-R ${params.genome_file} " }
        ext.prefix  = { "${meta.group}.GATK" }
        ext.when    = { params.haplotype_caller.equals('gatk') }
    }

    withName: '.*:HAPLOTYPING:SENTIEON_HAPLOTYPING' {
        container = "${params.container_dir}/sentieon_202308.01.sif"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/vcf/sentieon",
            mode: 'copy',
            overwrite: true,
            pattern: "*.sentieon.haplotypes.vcf.gz*"
        ]

        ext.args = { "-r ${params.genome_file} " }
        ext.args2 = { "--emit_mode confident" }
        ext.prefix  = { "${meta.group}.sentieon" }
        ext.when    = { params.haplotype_caller.equals('sentieon') }
    }

    withName: '.*:HAPLOTYPING:VARIANT_FILTRATION' {
        container = "${params.container_dir}/target_variants_python.sif"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/vcf/",
            mode: 'copy',
            overwrite: true,
            pattern: "*.filtered.haplotypes.vcf.gz*"
        ]

        ext.args    = { " --read_ratio=${params.read_ratio} --depth=${params.read_depth} "}
        ext.prefix  = { "${meta.group}" }
    }

}
